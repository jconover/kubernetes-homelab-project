name: React Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/react-frontend/**'
      - '.github/workflows/react-frontend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/react-frontend/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: jconover/kubernetes-homelab-react-frontend

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/react-frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/react-frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Build application
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: react-frontend-build
        path: apps/react-frontend/build/

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./apps/react-frontend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'
    
    - name: Setup ArgoCD CLI
      run: |
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/v2.8.4/argocd-linux-amd64
        sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
    
    - name: Update image tag in manifests
      run: |
        # Update the image tag in the deployment manifest
        sed -i "s|image: ghcr.io/jconover/kubernetes-homelab-react-frontend:.*|image: ghcr.io/jconover/kubernetes-homelab-react-frontend:main-$(echo $GITHUB_SHA | cut -c1-7)|g" manifests/apps/react-frontend/deployment.yaml
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add manifests/apps/react-frontend/deployment.yaml
        git commit -m "Update React frontend image tag to main-$(echo $GITHUB_SHA | cut -c1-7)" || exit 0
        git push
    
    - name: Sync ArgoCD application
      run: |
        # This would typically be done by ArgoCD automatically via GitOps
        # But we can also trigger a manual sync if needed
        echo "ArgoCD will automatically sync the application based on the updated manifest"
